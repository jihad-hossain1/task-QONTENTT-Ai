Q1. Project Requirement: Title: GraphQL API for User CRUD Operations Objective: Create a small project to develop and host a GraphQL API that allows CRUD operations for managing user data. The project should enable users to perform Create, Read, Update, and Delete (CRUD) operations on user records. Functional Requirements: 1. Implement a GraphQL API with the following operations: - Create a new user (Mutation) - Retrieve a list of all users (Query) - Delete a user by ID (Mutation) 2. User Data Model: - The user entity should have the following fields: - Name: String - Age: Integer - Email: String (unique) 3. CRUD Operations: - Create: Users should be able to create a new user by providing the name, age, and email. - Read: Users should be able to fetch a list of all added users with their details. - Update: Not required for this project. - Delete: Users should be able to delete a user by providing the user's ID. 4. GraphQL Schema: - Define a GraphQL schema that includes types for creating, querying, and deleting users. 5. Hosting: - Host the GraphQL API on a platform of your choice (e.g., Heroku, Vercel, etc.). - Provide instructions for accessing the GraphQL playground or endpoint. Deliverables: 1. Source Code: - Provide the source code of the project, including all necessary files and dependencies. 2. Deployment Instructions: - Share the deployed GraphQL API to the hosting platform. Timeline: The project should be completed within 17th Feb Acceptance Criteria: - The GraphQL API should be fully functional, allowing users to perform CRUD operations on user data. - The API should be hosted and accessible via a public endpoint or playground. - All functional and non-functional requirements should be met as per the project specifications. Note: Feel free to adjust the requirements and details based on specific project needs and constraints.